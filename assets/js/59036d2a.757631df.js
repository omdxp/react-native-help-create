"use strict";(self.webpackChunkrnhc_docs=self.webpackChunkrnhc_docs||[]).push([[211],{5680:(e,n,r)=>{r.d(n,{xA:()=>s,yg:()=>d});var t=r(6540);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function o(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function l(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?o(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function i(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=t.createContext({}),p=function(e){var n=t.useContext(c),r=n;return e&&(r="function"==typeof e?e(n):l(l({},n),e)),r},s=function(e){var n=p(e.components);return t.createElement(c.Provider,{value:n},e.children)},u="mdxType",y={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),u=p(r),m=a,d=u["".concat(c,".").concat(m)]||u[m]||y[m]||o;return r?t.createElement(d,l(l({ref:n},s),{},{components:r})):t.createElement(d,l({ref:n},s))}));function d(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=r.length,l=new Array(o);l[0]=m;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i[u]="string"==typeof e?e:a,l[1]=i;for(var p=2;p<o;p++)l[p]=r[p];return t.createElement.apply(null,l)}return t.createElement.apply(null,r)}m.displayName="MDXCreateElement"},8712:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var t=r(8168),a=(r(6540),r(5680));const o={sidebar_position:6},l="Notes",i={unversionedId:"notes",id:"version-2.3.4/notes",title:"Notes",description:"- To see the available commands for rnhc you can run:",source:"@site/versioned_docs/version-2.3.4/notes.md",sourceDirName:".",slug:"/notes",permalink:"/react-native-help-create/docs/2.3.4/notes",draft:!1,tags:[],version:"2.3.4",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Combine Screens",permalink:"/react-native-help-create/docs/2.3.4/combine/combine-screens"}},c={},p=[],s={toc:p};function u(e){let{components:n,...r}=e;return(0,a.yg)("wrapper",(0,t.A)({},s,r,{components:n,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"notes"},"Notes"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"To see the available commands for ",(0,a.yg)("inlineCode",{parentName:"li"},"rnhc")," you can run:")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-sh"},"rnhc --help\n")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"To see the available positionals and options for a specific command like ",(0,a.yg)("inlineCode",{parentName:"li"},"create")," you can run:")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-sh"},"rnhc create --help\n")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"In order to ",(0,a.yg)("inlineCode",{parentName:"li"},"rnhc")," to work, you must be at the root of your React Native project. It will check and if somehow you are not at the root of the project, ",(0,a.yg)("inlineCode",{parentName:"li"},"rnhc")," will prompt:")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},"You don't seem to be at the root of a react native project\n")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},"In ",(0,a.yg)("inlineCode",{parentName:"p"},"create")," command, ",(0,a.yg)("inlineCode",{parentName:"p"},"rnhc")," will create files with the project's used language, so if the project is written with TypeScript, it will write files with TypeScript, the same apply for JavaScript.")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},"If you want to create files with a specific language you can add ",(0,a.yg)("inlineCode",{parentName:"p"},"--js")," or ",(0,a.yg)("inlineCode",{parentName:"p"},"--ts")," options at the end of your ",(0,a.yg)("inlineCode",{parentName:"p"},"create")," command, like this for example:"))),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-sh"},"rnhc create -s test-screen --ts\n")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"It is advisable to give the components, screens, reducers and actions with this case ",(0,a.yg)("inlineCode",{parentName:"li"},"some-name"),", for example:")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-sh"},"rnhc create -s world-to-react\n")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"You can always overwrite your implementation using the ",(0,a.yg)("inlineCode",{parentName:"li"},"--overwrite")," or ",(0,a.yg)("inlineCode",{parentName:"li"},"-o")," option, for example:")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-sh"},"rnhc create -c test-component -o\n")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-sh"},"rnhc create -s test-screen -o\n")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-sh"},"rnhc create -r -o\n")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-sh"},"rnhc create --reducer test-reducer -o\n")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-sh"},"rnhc create --action test-reducer test-action -o\n")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"This is helpful when you want to update your navigation files, for example you already have a navigation file in ",(0,a.yg)("inlineCode",{parentName:"li"},"src/screens/")," folder and you want to update it with the new screens you created:")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-sh"},"rnhc create -n stack --overwrite\n")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},"When creating reducers you should have already a redux implmentation created with ",(0,a.yg)("inlineCode",{parentName:"p"},"rnhc create -r")," so it can work.")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},"When creating actions, you should have already a redux implementation created with ",(0,a.yg)("inlineCode",{parentName:"p"},"rnhc create -r")," as well as an existed reducer with ",(0,a.yg)("inlineCode",{parentName:"p"},"rnhc create --reducer <reducer-name>")," so it can create actions for that specific reducer.")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},"Creating and deleting reducers and actions will not just delete files, but also update other files that depends on them under the ",(0,a.yg)("inlineCode",{parentName:"p"},"src/redux/")," folder (Or your specified path for the root of redux folder in ",(0,a.yg)("inlineCode",{parentName:"p"},"rnhc.config.json"),")."))))}u.isMDXComponent=!0}}]);