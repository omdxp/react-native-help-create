"use strict";(self.webpackChunkrnhc_docs=self.webpackChunkrnhc_docs||[]).push([[9757],{9365:(e,n,t)=>{t.d(n,{A:()=>l});var r=t(6540),a=t(53);const s="tabItem_Ymn6";function l(e){let{children:n,hidden:t,className:l}=e;return r.createElement("div",{role:"tabpanel",className:(0,a.A)(s,l),hidden:t},n)}},4865:(e,n,t)=>{t.d(n,{A:()=>m});var r=t(8168),a=t(6540),s=t(53),l=t(2303),c=t(1682),i=t(6976),o=t(3104);const u="tabList__CuJ",p="tabItem_LNqP";function d(e){const{lazy:n,block:t,defaultValue:l,values:d,groupId:m,className:y}=e,g=a.Children.map(e.children,(e=>{if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),x=d??g.map((e=>{let{props:{value:n,label:t,attributes:r}}=e;return{value:n,label:t,attributes:r}})),T=(0,c.X)(x,((e,n)=>e.value===n.value));if(T.length>0)throw new Error(`Docusaurus error: Duplicate values "${T.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const f=null===l?l:l??g.find((e=>e.props.default))?.props.value??g[0].props.value;if(null!==f&&!x.some((e=>e.value===f)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${f}" but none of its children has the corresponding value. Available values are: ${x.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:h,setTabGroupChoices:b}=(0,i.x)(),[v,S]=(0,a.useState)(f),_=[],{blockElementScrollPositionUntilNextRender:A}=(0,o.a_)();if(null!=m){const e=h[m];null!=e&&e!==v&&x.some((n=>n.value===e))&&S(e)}const C=e=>{const n=e.currentTarget,t=_.indexOf(n),r=x[t].value;r!==v&&(A(n),S(r),null!=m&&b(m,String(r)))},N=e=>{let n=null;switch(e.key){case"Enter":C(e);break;case"ArrowRight":{const t=_.indexOf(e.currentTarget)+1;n=_[t]??_[0];break}case"ArrowLeft":{const t=_.indexOf(e.currentTarget)-1;n=_[t]??_[_.length-1];break}}n?.focus()};return a.createElement("div",{className:(0,s.A)("tabs-container",u)},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":t},y)},x.map((e=>{let{value:n,label:t,attributes:l}=e;return a.createElement("li",(0,r.A)({role:"tab",tabIndex:v===n?0:-1,"aria-selected":v===n,key:n,ref:e=>_.push(e),onKeyDown:N,onClick:C},l,{className:(0,s.A)("tabs__item",p,l?.className,{"tabs__item--active":v===n})}),t??n)}))),n?(0,a.cloneElement)(g.filter((e=>e.props.value===v))[0],{className:"margin-top--md"}):a.createElement("div",{className:"margin-top--md"},g.map(((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==v})))))}function m(e){const n=(0,l.A)();return a.createElement(d,(0,r.A)({key:String(n)},e))}},2283:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>o,default:()=>y,frontMatter:()=>i,metadata:()=>u,toc:()=>d});var r=t(8168),a=(t(6540),t(5680)),s=t(4865),l=t(9365),c=t(7964);const i={sidebar_position:3},o="Create Screens",u={unversionedId:"create/create-screens",id:"create/create-screens",title:"Create Screens",description:"Create a Screen",source:"@site/docs/create/create-screens.mdx",sourceDirName:"create",slug:"/create/create-screens",permalink:"/react-native-help-create/docs/create/create-screens",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Create Components",permalink:"/react-native-help-create/docs/create/create-components"},next:{title:"Create Navigations",permalink:"/react-native-help-create/docs/create/create-navigations"}},p={},d=[{value:"Create a Screen",id:"create-a-screen",level:2},{value:"Example",id:"example",level:3},{value:"Create multiple Screens",id:"create-multiple-screens",level:2},{value:"Example",id:"example-1",level:3},{value:"Create Screens in a Specific Folder",id:"create-screens-in-a-specific-folder",level:2},{value:"Example",id:"example-2",level:3}],m={toc:d};function y(e){let{components:n,...t}=e;return(0,a.yg)("wrapper",(0,r.A)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"create-screens"},"Create Screens"),(0,a.yg)("h2",{id:"create-a-screen"},"Create a Screen"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"To create your screen simply run:")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-sh"},"rnhc create -s <screen-name>\n")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"This will create a screen after the given name ",(0,a.yg)("inlineCode",{parentName:"li"},"screen-name")," under the ",(0,a.yg)("inlineCode",{parentName:"li"},"src/screens/")," folder.")),(0,a.yg)("h3",{id:"example"},"Example"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-sh"},"rnhc create -s testScreen\n")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"This will create the following:")),(0,a.yg)(s.A,{groupId:"language",mdxType:"Tabs"},(0,a.yg)(l.A,{value:"js",label:"JavaScript",default:!0,mdxType:"TabItem"},(0,a.yg)(c.A,{mdxType:"CodeBlock"},"src/\n\u2514\u2500\u2500 screens\n    \u2514\u2500\u2500 test-screen\n        \u251c\u2500\u2500 __tests__\n        \u2502   \u2514\u2500\u2500 index.spec.jsx\n        \u251c\u2500\u2500 functions\n        \u2502   \u2514\u2500\u2500 index.js\n        \u251c\u2500\u2500 index.jsx\n        \u2514\u2500\u2500 styles.js")),(0,a.yg)(l.A,{value:"ts",label:"TypeScript",mdxType:"TabItem"},(0,a.yg)(c.A,{mdxType:"CodeBlock"},"src/\n\u2514\u2500\u2500 screens\n    \u2514\u2500\u2500 test-screen\n        \u251c\u2500\u2500 __tests__\n        \u2502   \u2514\u2500\u2500 index.spec.tsx\n        \u251c\u2500\u2500 functions\n        \u2502   \u2514\u2500\u2500 index.ts\n        \u251c\u2500\u2500 index.tsx\n        \u2514\u2500\u2500 styles.ts"))),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Where ",(0,a.yg)("inlineCode",{parentName:"li"},"index.*")," represent the screen which is nothing but a React FC component that contains the following:")),(0,a.yg)(s.A,{groupId:"language",mdxType:"Tabs"},(0,a.yg)(l.A,{value:"js",label:"JavaScript",default:!0,mdxType:"TabItem"},(0,a.yg)(c.A,{language:"jsx",mdxType:"CodeBlock"},'import { Text, View } from "react-native";\nimport {} from "./functions";\nimport { TestScreenStyles } from "./styles";\n\nconst TestScreenScreen = () => {\n  return (\n    <View>\n      <Text>TestScreen screen created!</Text>\n    </View>\n  );\n};\nexport default TestScreenScreen;\n')),(0,a.yg)(l.A,{value:"ts",label:"TypeScript",mdxType:"TabItem"},(0,a.yg)(c.A,{language:"tsx",mdxType:"CodeBlock"},'import { FC } from "react";\nimport { Text, View } from "react-native";\nimport {} from "./functions";\nimport { TestScreenStyles } from "./styles";\n\ninterface TestScreenScreenProps {}\n\nconst TestScreenScreen: FC<TestScreenScreenProps> = ({}) => {\n  return (\n    <View>\n      <Text>TestScreen screen created!</Text>\n    </View>\n  );\n};\nexport default TestScreenScreen;\n'))),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"As for ",(0,a.yg)("inlineCode",{parentName:"li"},"styles.*")," you will find:")),(0,a.yg)(s.A,{groupId:"language",mdxType:"Tabs"},(0,a.yg)(l.A,{value:"js",label:"JavaScript",default:!0,mdxType:"TabItem"},(0,a.yg)(c.A,{language:"jsx",mdxType:"CodeBlock"},'import { StyleSheet } from "react-native";\n\nexport const TestScreenStyles = StyleSheet.create({});\n')),(0,a.yg)(l.A,{value:"ts",label:"TypeScript",mdxType:"TabItem"},(0,a.yg)(c.A,{language:"tsx",mdxType:"CodeBlock"},'import { StyleSheet } from "react-native";\n\nexport const TestScreenStyles = StyleSheet.create({});\n'))),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"And ",(0,a.yg)("inlineCode",{parentName:"li"},"index.spec.*")," will contain:")),(0,a.yg)(s.A,{groupId:"language",mdxType:"Tabs"},(0,a.yg)(l.A,{value:"js",label:"JavaScript",default:!0,mdxType:"TabItem"},(0,a.yg)(c.A,{language:"jsx",mdxType:"CodeBlock"},'import "react-native";\n\nimport React from "react";\nimport TestScreenScreen from "..";\nimport renderer from "react-test-renderer";\n\nit("renders correctly", () => {\n  renderer.create(<TestScreenScreen />);\n});\n')),(0,a.yg)(l.A,{value:"ts",label:"TypeScript",mdxType:"TabItem"},(0,a.yg)(c.A,{language:"tsx",mdxType:"CodeBlock"},'import "react-native";\n\nimport TestScreenScreen from "../";\nimport React from "react";\nimport renderer from "react-test-renderer";\n\nit("renders correctly", () => {\n  renderer.create(<TestScreenScreen />);\n});\n'))),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"And under the ",(0,a.yg)("inlineCode",{parentName:"li"},"functions")," folder you should write your screen's functions and export them in ",(0,a.yg)("inlineCode",{parentName:"li"},"function/index.*")," file, which by default it will contain the following:")),(0,a.yg)(s.A,{groupId:"language",mdxType:"Tabs"},(0,a.yg)(l.A,{value:"js",label:"JavaScript",default:!0,mdxType:"TabItem"},(0,a.yg)(c.A,{language:"jsx",mdxType:"CodeBlock"},"// write your TestScreen screen functions here\n")),(0,a.yg)(l.A,{value:"ts",label:"TypeScript",mdxType:"TabItem"},(0,a.yg)(c.A,{language:"tsx",mdxType:"CodeBlock"},"// write your TestScreen screen functions here\nexport {};\n"))),(0,a.yg)("h2",{id:"create-multiple-screens"},"Create multiple Screens"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"To create multiple screens simply run:")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-sh"},"rnhc create -s <screen-name-1> <screen-name-2> ...\n")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"This will create multiple screens under the ",(0,a.yg)("inlineCode",{parentName:"li"},"src/screens/")," folder.")),(0,a.yg)("h3",{id:"example-1"},"Example"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-sh"},"rnhc create -s screen-1 screen-2\n")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"This will create the following:")),(0,a.yg)(s.A,{groupId:"language",mdxType:"Tabs"},(0,a.yg)(l.A,{value:"js",label:"JavaScript",default:!0,mdxType:"TabItem"},(0,a.yg)(c.A,{mdxType:"CodeBlock"},"src/\n\u2514\u2500\u2500 screens\n    \u251c\u2500\u2500 screen-1\n    \u2502\xa0\xa0 \u251c\u2500\u2500 __tests__\n    \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 index.spec.jsx\n    \u2502\xa0\xa0 \u251c\u2500\u2500 functions\n    \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 index.js\n    \u2502\xa0\xa0 \u251c\u2500\u2500 index.jsx\n    \u2502\xa0\xa0 \u2514\u2500\u2500 styles.js\n    \u2514\u2500\u2500 screen-2\n        \u251c\u2500\u2500 __tests__\n        \u2502\xa0\xa0 \u2514\u2500\u2500 index.spec.jsx\n        \u251c\u2500\u2500 functions\n        \u2502\xa0\xa0 \u2514\u2500\u2500 index.js\n        \u251c\u2500\u2500 index.jsx\n        \u2514\u2500\u2500 styles.js")),(0,a.yg)(l.A,{value:"ts",label:"TypeScript",mdxType:"TabItem"},(0,a.yg)(c.A,{mdxType:"CodeBlock"},"src/\n\u2514\u2500\u2500 screens\n    \u251c\u2500\u2500 screen-1\n    \u2502\xa0\xa0 \u251c\u2500\u2500 __tests__\n    \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 index.spec.tsx\n    \u2502\xa0\xa0 \u251c\u2500\u2500 functions\n    \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 index.ts\n    \u2502\xa0\xa0 \u251c\u2500\u2500 index.tsx\n    \u2502\xa0\xa0 \u2514\u2500\u2500 styles.ts\n    \u2514\u2500\u2500 screen-2\n        \u251c\u2500\u2500 __tests__\n        \u2502\xa0\xa0 \u2514\u2500\u2500 index.spec.tsx\n        \u251c\u2500\u2500 functions\n        \u2502\xa0\xa0 \u2514\u2500\u2500 index.ts\n        \u251c\u2500\u2500 index.tsx\n        \u2514\u2500\u2500 styles.ts"))),(0,a.yg)("h2",{id:"create-screens-in-a-specific-folder"},"Create Screens in a Specific Folder"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"To create one or multiple screens in a specific path that resides under ",(0,a.yg)("inlineCode",{parentName:"li"},"src/screens/")," folder, simply run:")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-sh"},"rnhc create -s <screen-name-1> <screen-name-2> ... -f <folder-path>\n")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"This will create your screens under the ",(0,a.yg)("inlineCode",{parentName:"li"},"src/screens/<folder-path>")," folder.")),(0,a.yg)("h3",{id:"example-2"},"Example"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-sh"},"rnhc create -s screen-1 screen-2 -f foo/bar\n")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"This will create the following:")),(0,a.yg)(s.A,{groupId:"language",mdxType:"Tabs"},(0,a.yg)(l.A,{value:"js",label:"JavaScript",default:!0,mdxType:"TabItem"},(0,a.yg)(c.A,{mdxType:"CodeBlock"},"src/\n\u2514\u2500\u2500 screens\n    \u2514\u2500\u2500 foo\n        \u2514\u2500\u2500 bar\n            \u251c\u2500\u2500 screen-1\n            \u2502\xa0\xa0 \u251c\u2500\u2500 __tests__\n            \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 index.spec.jsx\n            \u2502\xa0\xa0 \u251c\u2500\u2500 functions\n            \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 index.js\n            \u2502\xa0\xa0 \u251c\u2500\u2500 index.jsx\n            \u2502\xa0\xa0 \u2514\u2500\u2500 styles.js\n            \u2514\u2500\u2500 screen-2\n                \u251c\u2500\u2500 __tests__\n                \u2502\xa0\xa0 \u2514\u2500\u2500 index.spec.jsx\n                \u251c\u2500\u2500 functions\n                \u2502\xa0\xa0 \u2514\u2500\u2500 index.js\n                \u251c\u2500\u2500 index.jsx\n                \u2514\u2500\u2500 styles.js")),(0,a.yg)(l.A,{value:"ts",label:"TypeScript",mdxType:"TabItem"},(0,a.yg)(c.A,{mdxType:"CodeBlock"},"src/\n\u2514\u2500\u2500 screens\n    \u2514\u2500\u2500 foo\n        \u2514\u2500\u2500 bar\n            \u251c\u2500\u2500 screen-1\n            \u2502\xa0\xa0 \u251c\u2500\u2500 __tests__\n            \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 index.spec.tsx\n            \u2502\xa0\xa0 \u251c\u2500\u2500 functions\n            \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 index.ts\n            \u2502\xa0\xa0 \u251c\u2500\u2500 index.tsx\n            \u2502\xa0\xa0 \u2514\u2500\u2500 styles.ts\n            \u2514\u2500\u2500 screen-2\n                \u251c\u2500\u2500 __tests__\n                \u2502\xa0\xa0 \u2514\u2500\u2500 index.spec.tsx\n                \u251c\u2500\u2500 functions\n                \u2502\xa0\xa0 \u2514\u2500\u2500 index.ts\n                \u251c\u2500\u2500 index.tsx\n                \u2514\u2500\u2500 styles.ts"))))}y.isMDXComponent=!0}}]);