"use strict";(self.webpackChunkrnhc_docs=self.webpackChunkrnhc_docs||[]).push([[8830],{9365:(e,n,a)=>{a.d(n,{A:()=>i});var t=a(6540),s=a(53);const r="tabItem_Ymn6";function i(e){let{children:n,hidden:a,className:i}=e;return t.createElement("div",{role:"tabpanel",className:(0,s.A)(r,i),hidden:a},n)}},4865:(e,n,a)=>{a.d(n,{A:()=>u});var t=a(8168),s=a(6540),r=a(53),i=a(2303),o=a(1682),l=a(6976),c=a(3104);const p="tabList__CuJ",d="tabItem_LNqP";function g(e){const{lazy:n,block:a,defaultValue:i,values:g,groupId:u,className:m}=e,y=s.Children.map(e.children,(e=>{if((0,s.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),x=g??y.map((e=>{let{props:{value:n,label:a,attributes:t}}=e;return{value:n,label:a,attributes:t}})),f=(0,o.X)(x,((e,n)=>e.value===n.value));if(f.length>0)throw new Error(`Docusaurus error: Duplicate values "${f.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const v=null===i?i:i??y.find((e=>e.props.default))?.props.value??y[0].props.value;if(null!==v&&!x.some((e=>e.value===v)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${v}" but none of its children has the corresponding value. Available values are: ${x.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:h,setTabGroupChoices:N}=(0,l.x)(),[T,b]=(0,s.useState)(v),_=[],{blockElementScrollPositionUntilNextRender:C}=(0,c.a_)();if(null!=u){const e=h[u];null!=e&&e!==T&&x.some((n=>n.value===e))&&b(e)}const j=e=>{const n=e.currentTarget,a=_.indexOf(n),t=x[a].value;t!==T&&(C(n),b(t),null!=u&&N(u,String(t)))},w=e=>{let n=null;switch(e.key){case"Enter":j(e);break;case"ArrowRight":{const a=_.indexOf(e.currentTarget)+1;n=_[a]??_[0];break}case"ArrowLeft":{const a=_.indexOf(e.currentTarget)-1;n=_[a]??_[_.length-1];break}}n?.focus()};return s.createElement("div",{className:(0,r.A)("tabs-container",p)},s.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":a},m)},x.map((e=>{let{value:n,label:a,attributes:i}=e;return s.createElement("li",(0,t.A)({role:"tab",tabIndex:T===n?0:-1,"aria-selected":T===n,key:n,ref:e=>_.push(e),onKeyDown:w,onClick:j},i,{className:(0,r.A)("tabs__item",d,i?.className,{"tabs__item--active":T===n})}),a??n)}))),n?(0,s.cloneElement)(y.filter((e=>e.props.value===T))[0],{className:"margin-top--md"}):s.createElement("div",{className:"margin-top--md"},y.map(((e,n)=>(0,s.cloneElement)(e,{key:n,hidden:e.props.value!==T})))))}function u(e){const n=(0,i.A)();return s.createElement(g,(0,t.A)({key:String(n)},e))}},4418:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>u,contentTitle:()=>d,default:()=>x,frontMatter:()=>p,metadata:()=>g,toc:()=>m});var t=a(8168),s=(a(6540),a(5680)),r=a(4865),i=a(9365),o=a(7964);const l='import Screen1Screen from "./screen-1";\nimport Screen2Screen from "./screen-2";\nimport { createStackNavigator } from "@react-navigation/stack";\nconst { Navigator, Screen } = createStackNavigator();\n\n\nconst routes = [\n  {\n    name: "screen-1",\n    component: Screen1Screen,\n  },\n  {\n    name: "screen-2",\n    component: Screen2Screen,\n  },\n];\n\nconst Navigation = () => {\n  return (\n    <Navigator>\n      {routes.map(({ name, component }) => (\n        <Screen key={name} name={name} component={component} />\n      ))}\n    </Navigator>\n  );\n};\nexport default Navigation;\n',c='import { FC } from "react";\nimport Screen1Screen from "./screen-1";\nimport Screen2Screen from "./screen-2";\nimport { createStackNavigator } from "@react-navigation/stack";\nconst { Navigator, Screen } = createStackNavigator();\n\n\ninterface Route {\n  name: string;\n  component: FC;\n}\n\nconst routes: Route[] = [\n  {\n    name: "screen-1",\n    component: Screen1Screen,\n  },\n  {\n    name: "screen-2",\n    component: Screen2Screen,\n  },\n];\n\nconst Navigation: FC = () => {\n  return (\n    <Navigator>\n      {routes.map(({ name, component }) => (\n        <Screen key={name} name={name} component={component} />\n      ))}\n    </Navigator>\n  );\n};\nexport default Navigation;\n',p={sidebar_position:4},d="Create Navigations",g={unversionedId:"create/create-navigations",id:"create/create-navigations",title:"Create Navigations",description:"Navigations are the relations between chosen screens.",source:"@site/docs/create/create-navigations.mdx",sourceDirName:"create",slug:"/create/create-navigations",permalink:"/react-native-help-create/docs/create/create-navigations",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Create Screens",permalink:"/react-native-help-create/docs/create/create-screens"},next:{title:"Using Templates",permalink:"/react-native-help-create/docs/create/using-templates"}},u={},m=[{value:"Create Navigation for specific screens",id:"create-navigation-for-specific-screens",level:2},{value:"Example",id:"example",level:3},{value:"Create Navigation for specific screens in a specific folder",id:"create-navigation-for-specific-screens-in-a-specific-folder",level:2},{value:"Example",id:"example-1",level:3},{value:"Create Navigation that depends on other navigations",id:"create-navigation-that-depends-on-other-navigations",level:2},{value:"Example",id:"example-2",level:3},{value:"Create Navigation for all screens",id:"create-navigation-for-all-screens",level:2}],y={toc:m};function x(e){let{components:n,...a}=e;return(0,s.yg)("wrapper",(0,t.A)({},y,a,{components:n,mdxType:"MDXLayout"}),(0,s.yg)("h1",{id:"create-navigations"},"Create Navigations"),(0,s.yg)("p",null,"Navigations are the relations between chosen screens."),(0,s.yg)("h2",{id:"create-navigation-for-specific-screens"},"Create Navigation for specific screens"),(0,s.yg)("ul",null,(0,s.yg)("li",{parentName:"ul"},"To create a navigation between two or more screens, simply run:")),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-sh"},"rnhc create -n <navigation-type> <screen-name-1> <screen-name-2> ...\n")),(0,s.yg)("ul",null,(0,s.yg)("li",{parentName:"ul"},(0,s.yg)("p",{parentName:"li"},"The ",(0,s.yg)("inlineCode",{parentName:"p"},"<navigation-type>")," can be either of these types: ",(0,s.yg)("inlineCode",{parentName:"p"},"stack"),", ",(0,s.yg)("inlineCode",{parentName:"p"},"native-stack"),", ",(0,s.yg)("inlineCode",{parentName:"p"},"drawer"),", ",(0,s.yg)("inlineCode",{parentName:"p"},"bottom-tabs"),", ",(0,s.yg)("inlineCode",{parentName:"p"},"material-bottom-tabs")," or ",(0,s.yg)("inlineCode",{parentName:"p"},"material-top-tabs"),".")),(0,s.yg)("li",{parentName:"ul"},(0,s.yg)("p",{parentName:"li"},"The number of given screens should be 2 or more.")),(0,s.yg)("li",{parentName:"ul"},(0,s.yg)("p",{parentName:"li"},"If one of the screens does not exist, ",(0,s.yg)("inlineCode",{parentName:"p"},"rnhc")," will try to create the ",(0,s.yg)("inlineCode",{parentName:"p"},"navigation.*")," file that resides next to the existed screens.")),(0,s.yg)("li",{parentName:"ul"},(0,s.yg)("p",{parentName:"li"},"If all screens does not exist, ",(0,s.yg)("inlineCode",{parentName:"p"},"rhnc")," will prompt you the following:"))),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-sh"},"None of these screens exist\n")),(0,s.yg)("h3",{id:"example"},"Example"),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-sh"},"rnhc create -n stack screen-1 screen-2\n")),(0,s.yg)("ul",null,(0,s.yg)("li",{parentName:"ul"},"This will create a ",(0,s.yg)("inlineCode",{parentName:"li"},"navigation.*")," file next to ",(0,s.yg)("inlineCode",{parentName:"li"},"screen-1")," and ",(0,s.yg)("inlineCode",{parentName:"li"},"screen-2")," screens as the following:")),(0,s.yg)(r.A,{groupId:"language",mdxType:"Tabs"},(0,s.yg)(i.A,{value:"js",label:"JavaScript",default:!0,mdxType:"TabItem"},(0,s.yg)(o.A,{mdxType:"CodeBlock"},"src/\n\u2514\u2500\u2500 screens\n    \u251c\u2500\u2500 navigation.jsx\n    \u251c\u2500\u2500 screen-1\n    \u2502\xa0\xa0 \u251c\u2500\u2500 __tests__\n    \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 index.spec.jsx\n    \u2502\xa0\xa0 \u251c\u2500\u2500 functions\n    \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 index.js\n    \u2502\xa0\xa0 \u251c\u2500\u2500 index.jsx\n    \u2502\xa0\xa0 \u2514\u2500\u2500 styles.js\n    \u2514\u2500\u2500 screen-2\n        \u251c\u2500\u2500 __tests__\n        \u2502\xa0\xa0 \u2514\u2500\u2500 index.spec.jsx\n        \u251c\u2500\u2500 functions\n        \u2502\xa0\xa0 \u2514\u2500\u2500 index.js\n        \u251c\u2500\u2500 index.jsx\n        \u2514\u2500\u2500 styles.js")),(0,s.yg)(i.A,{value:"ts",label:"TypeScript",mdxType:"TabItem"},(0,s.yg)(o.A,{mdxType:"CodeBlock"},"src/\n\u2514\u2500\u2500 screens\n    \u251c\u2500\u2500 navigation.tsx\n    \u251c\u2500\u2500 screen-1\n    \u2502\xa0\xa0 \u251c\u2500\u2500 __tests__\n    \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 index.spec.tsx\n    \u2502\xa0\xa0 \u251c\u2500\u2500 functions\n    \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 index.js\n    \u2502\xa0\xa0 \u251c\u2500\u2500 index.tsx\n    \u2502\xa0\xa0 \u2514\u2500\u2500 styles.ts\n    \u2514\u2500\u2500 screen-2\n        \u251c\u2500\u2500 __tests__\n        \u2502\xa0\xa0 \u2514\u2500\u2500 index.spec.tsx\n        \u251c\u2500\u2500 functions\n        \u2502\xa0\xa0 \u2514\u2500\u2500 index.ts\n        \u251c\u2500\u2500 index.tsx\n        \u2514\u2500\u2500 styles.ts"))),(0,s.yg)("ul",null,(0,s.yg)("li",{parentName:"ul"},"The content for the ",(0,s.yg)("inlineCode",{parentName:"li"},"navigation.*")," file is as the following:")),(0,s.yg)(r.A,{groupId:"language",mdxType:"Tabs"},(0,s.yg)(i.A,{value:"js",label:"JavaScript",default:!0,mdxType:"TabItem"},(0,s.yg)(o.A,{language:"jsx",mdxType:"CodeBlock"},l)),(0,s.yg)(i.A,{value:"ts",label:"TypeScript",mdxType:"TabItem"},(0,s.yg)(o.A,{language:"tsx",mdxType:"CodeBlock"},c))),(0,s.yg)("h2",{id:"create-navigation-for-specific-screens-in-a-specific-folder"},"Create Navigation for specific screens in a specific folder"),(0,s.yg)("ul",null,(0,s.yg)("li",{parentName:"ul"},"To create a navigation file for screens that resides in a specific path under the ",(0,s.yg)("inlineCode",{parentName:"li"},"src/screens/")," folder, you can run this:")),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-sh"},"rnhc create -n <navigation-type> <screen-name-1> <screen-name-2> ... -f <folder-path>\n")),(0,s.yg)("ul",null,(0,s.yg)("li",{parentName:"ul"},"This will create the ",(0,s.yg)("inlineCode",{parentName:"li"},"navigation.*")," file under the ",(0,s.yg)("inlineCode",{parentName:"li"},"src/screens/<folder-path>/")," folder for the screens that resides in the same location.")),(0,s.yg)("h3",{id:"example-1"},"Example"),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-sh"},"rhnc create -n drawer screen-1 screen-2 -f foo/bar\n")),(0,s.yg)("ul",null,(0,s.yg)("li",{parentName:"ul"},"This will create ",(0,s.yg)("inlineCode",{parentName:"li"},"navigation.*")," file under ",(0,s.yg)("inlineCode",{parentName:"li"},"src/screens/foo/bar/")," folder which contains the following:")),(0,s.yg)(r.A,{groupId:"language",mdxType:"Tabs"},(0,s.yg)(i.A,{value:"js",label:"JavaScript",default:!0,mdxType:"TabItem"},(0,s.yg)(o.A,{language:"jsx",mdxType:"CodeBlock"},l)),(0,s.yg)(i.A,{value:"ts",label:"TypeScript",mdxType:"TabItem"},(0,s.yg)(o.A,{language:"tsx",mdxType:"CodeBlock"},c))),(0,s.yg)("h2",{id:"create-navigation-that-depends-on-other-navigations"},"Create Navigation that depends on other navigations"),(0,s.yg)("ul",null,(0,s.yg)("li",{parentName:"ul"},"To create a navigation that depends on another navigation you can run the same command as this:")),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-sh"},"rnhc create -n <navigation-type> <screen-name-1> <screen-name-2> ... <another-navigation-folder>\n")),(0,s.yg)("ul",null,(0,s.yg)("li",{parentName:"ul"},"This will create ",(0,s.yg)("inlineCode",{parentName:"li"},"navigation.*")," file that resides in the same location for the given inputs.")),(0,s.yg)("h3",{id:"example-2"},"Example"),(0,s.yg)("p",null,"In this example, we have the following structure:"),(0,s.yg)(r.A,{groupId:"language",mdxType:"Tabs"},(0,s.yg)(i.A,{value:"js",label:"JavaScript",default:!0,mdxType:"TabItem"},(0,s.yg)(o.A,{mdxType:"CodeBlock"},"src/\n\u2514\u2500\u2500 screens\n    \u251c\u2500\u2500 folder\n    \u2502\xa0\xa0 \u251c\u2500\u2500 navigation.jsx\n    \u2502\xa0\xa0 \u251c\u2500\u2500 screen-one\n    \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 __tests__\n    \u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 index.spec.jsx\n    \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 functions\n    \u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 index.js\n    \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 index.jsx\n    \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 styles.js\n    \u2502\xa0\xa0 \u2514\u2500\u2500 screen-two\n    \u2502\xa0\xa0     \u251c\u2500\u2500 __tests__\n    \u2502\xa0\xa0     \u2502\xa0\xa0 \u2514\u2500\u2500 index.spec.jsx\n    \u2502\xa0\xa0     \u251c\u2500\u2500 functions\n    \u2502\xa0\xa0     \u2502\xa0\xa0 \u2514\u2500\u2500 index.js\n    \u2502\xa0\xa0     \u251c\u2500\u2500 index.jsx\n    \u2502\xa0\xa0     \u2514\u2500\u2500 styles.js\n    \u2514\u2500\u2500 screen-three\n        \u251c\u2500\u2500 __tests__\n        \u2502\xa0\xa0 \u2514\u2500\u2500 index.spec.jsx\n        \u251c\u2500\u2500 functions\n        \u2502\xa0\xa0 \u2514\u2500\u2500 index.js\n        \u251c\u2500\u2500 index.jsx\n        \u2514\u2500\u2500 styles.js")),(0,s.yg)(i.A,{value:"ts",label:"TypeScript",mdxType:"TabItem"},(0,s.yg)(o.A,{mdxType:"CodeBlock"},"src/\n\u2514\u2500\u2500 screens\n    \u251c\u2500\u2500 folder\n    \u2502\xa0\xa0 \u251c\u2500\u2500 navigation.tsx\n    \u2502\xa0\xa0 \u251c\u2500\u2500 screen-one\n    \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 __tests__\n    \u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 index.spec.tsx\n    \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 functions\n    \u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 index.ts\n    \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 index.tsx\n    \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 styles.ts\n    \u2502\xa0\xa0 \u2514\u2500\u2500 screen-two\n    \u2502\xa0\xa0     \u251c\u2500\u2500 __tests__\n    \u2502\xa0\xa0     \u2502\xa0\xa0 \u2514\u2500\u2500 index.spec.tsx\n    \u2502\xa0\xa0     \u251c\u2500\u2500 functions\n    \u2502\xa0\xa0     \u2502\xa0\xa0 \u2514\u2500\u2500 index.ts\n    \u2502\xa0\xa0     \u251c\u2500\u2500 index.tsx\n    \u2502\xa0\xa0     \u2514\u2500\u2500 styles.ts\n    \u2514\u2500\u2500 screen-three\n        \u251c\u2500\u2500 __tests__\n        \u2502\xa0\xa0 \u2514\u2500\u2500 index.spec.tsx\n        \u251c\u2500\u2500 functions\n        \u2502\xa0\xa0 \u2514\u2500\u2500 index.ts\n        \u251c\u2500\u2500 index.tsx\n        \u2514\u2500\u2500 styles.ts"))),(0,s.yg)("p",null,"Where we have a drawer navigation between ",(0,s.yg)("inlineCode",{parentName:"p"},"screen-one")," and ",(0,s.yg)("inlineCode",{parentName:"p"},"screen-two")," under the ",(0,s.yg)("inlineCode",{parentName:"p"},"folder")," folder. And we want to create a stack navigation between ",(0,s.yg)("inlineCode",{parentName:"p"},"folder")," and ",(0,s.yg)("inlineCode",{parentName:"p"},"screen-three"),". And to show that ",(0,s.yg)("inlineCode",{parentName:"p"},"rnhc")," will continue to run for the existed screens we added in the command line ",(0,s.yg)("inlineCode",{parentName:"p"},"screen-four")," which does not exist as the following:"),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-sh"},"rnhc create -n stack folder screen-three screen-four\n")),(0,s.yg)("ul",null,(0,s.yg)("li",{parentName:"ul"},"The command will output the following:")),(0,s.yg)(r.A,{groupId:"language",mdxType:"Tabs"},(0,s.yg)(i.A,{value:"js",label:"JavaScript",default:!0,mdxType:"TabItem"},(0,s.yg)(o.A,{language:"jsx",mdxType:"CodeBlock"},"src/screens/screen-four/ does not exist\nsrc/screens/navigation.jsx created")),(0,s.yg)(i.A,{value:"ts",label:"TypeScript",mdxType:"TabItem"},(0,s.yg)(o.A,{language:"tsx",mdxType:"CodeBlock"},"src/screens/screen-four/ does not exist\nsrc/screens/navigation.tsx created"))),(0,s.yg)("ul",null,(0,s.yg)("li",{parentName:"ul"},"And it will add a new ",(0,s.yg)("inlineCode",{parentName:"li"},"navigation.*")," that resides between ",(0,s.yg)("inlineCode",{parentName:"li"},"folder")," and ",(0,s.yg)("inlineCode",{parentName:"li"},"screen-three")," as the following:")),(0,s.yg)(r.A,{groupId:"language",mdxType:"Tabs"},(0,s.yg)(i.A,{value:"js",label:"JavaScript",default:!0,mdxType:"TabItem"},(0,s.yg)(o.A,{mdxType:"CodeBlock"},"src/\n\u2514\u2500\u2500 screens\n    \u251c\u2500\u2500 folder\n    \u2502\xa0\xa0 \u251c\u2500\u2500 navigation.jsx\n    \u2502\xa0\xa0 \u251c\u2500\u2500 screen-one\n    \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 __tests__\n    \u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 index.spec.jsx\n    \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 functions\n    \u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 index.js\n    \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 index.jsx\n    \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 styles.js\n    \u2502\xa0\xa0 \u2514\u2500\u2500 screen-two\n    \u2502\xa0\xa0     \u251c\u2500\u2500 __tests__\n    \u2502\xa0\xa0     \u2502\xa0\xa0 \u2514\u2500\u2500 index.spec.jsx\n    \u2502\xa0\xa0     \u251c\u2500\u2500 functions\n    \u2502\xa0\xa0     \u2502\xa0\xa0 \u2514\u2500\u2500 index.js\n    \u2502\xa0\xa0     \u251c\u2500\u2500 index.jsx\n    \u2502\xa0\xa0     \u2514\u2500\u2500 styles.js\n    \u251c\u2500\u2500 navigation.jsx\n    \u2514\u2500\u2500 screen-three\n        \u251c\u2500\u2500 __tests__\n        \u2502\xa0\xa0 \u2514\u2500\u2500 index.spec.jsx\n        \u251c\u2500\u2500 functions\n        \u2502\xa0\xa0 \u2514\u2500\u2500 index.js\n        \u251c\u2500\u2500 index.jsx\n        \u2514\u2500\u2500 styles.js")),(0,s.yg)(i.A,{value:"ts",label:"TypeScript",mdxType:"TabItem"},(0,s.yg)(o.A,{mdxType:"CodeBlock"},"src/\n\u2514\u2500\u2500 screens\n    \u251c\u2500\u2500 folder\n    \u2502\xa0\xa0 \u251c\u2500\u2500 navigation.tsx\n    \u2502\xa0\xa0 \u251c\u2500\u2500 screen-one\n    \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 __tests__\n    \u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 index.spec.tsx\n    \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 functions\n    \u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 index.ts\n    \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 index.tsx\n    \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 styles.ts\n    \u2502\xa0\xa0 \u2514\u2500\u2500 screen-two\n    \u2502\xa0\xa0     \u251c\u2500\u2500 __tests__\n    \u2502\xa0\xa0     \u2502\xa0\xa0 \u2514\u2500\u2500 index.spec.tsx\n    \u2502\xa0\xa0     \u251c\u2500\u2500 functions\n    \u2502\xa0\xa0     \u2502\xa0\xa0 \u2514\u2500\u2500 index.ts\n    \u2502\xa0\xa0     \u251c\u2500\u2500 index.tsx\n    \u2502\xa0\xa0     \u2514\u2500\u2500 styles.ts\n    \u251c\u2500\u2500 navigation.tsx\n    \u2514\u2500\u2500 screen-three\n        \u251c\u2500\u2500 __tests__\n        \u2502\xa0\xa0 \u2514\u2500\u2500 index.spec.tsx\n        \u251c\u2500\u2500 functions\n        \u2502\xa0\xa0 \u2514\u2500\u2500 index.ts\n        \u251c\u2500\u2500 index.tsx\n        \u2514\u2500\u2500 styles.ts"))),(0,s.yg)("ul",null,(0,s.yg)("li",{parentName:"ul"},"And the content of the new ",(0,s.yg)("inlineCode",{parentName:"li"},"navigation.*")," file will be like this:")),(0,s.yg)(r.A,{groupId:"language",mdxType:"Tabs"},(0,s.yg)(i.A,{value:"js",label:"JavaScript",default:!0,mdxType:"TabItem"},(0,s.yg)(o.A,{language:"jsx",mdxType:"CodeBlock"},'import FolderNavigation from "./folder/navigation";\nimport ScreenThreeScreen from "./screen-three";\nimport { createStackNavigator } from "@react-navigation/stack";\nconst { Navigator, Screen } = createStackNavigator();\n\n\nconst routes = [\n  {\n    name: "folder",\n    component: FolderNavigation,\n  },\n  {\n    name: "screen-three",\n    component: ScreenThreeScreen,\n  },\n];\n\nconst Navigation = () => {\n  return (\n    <Navigator>\n      {routes.map(({ name, component }) => (\n        <Screen key={name} name={name} component={component} />\n      ))}\n    </Navigator>\n  );\n};\nexport default Navigation;\n')),(0,s.yg)(i.A,{value:"ts",label:"TypeScript",mdxType:"TabItem"},(0,s.yg)(o.A,{language:"tsx",mdxType:"CodeBlock"},'import { FC } from "react";\nimport FolderNavigation from "./folder/navigation";\nimport ScreenThreeScreen from "./screen-three";\nimport { createStackNavigator } from "@react-navigation/stack";\nconst { Navigator, Screen } = createStackNavigator();\n\n\ninterface Route {\n  name: string;\n  component: FC;\n}\n\nconst routes: Route[] = [\n  {\n    name: "folder",\n    component: FolderNavigation,\n  },\n  {\n    name: "screen-three",\n    component: ScreenThreeScreen,\n  },\n];\n\nconst Navigation: FC = () => {\n  return (\n    <Navigator>\n      {routes.map(({ name, component }) => (\n        <Screen key={name} name={name} component={component} />\n      ))}\n    </Navigator>\n  );\n};\nexport default Navigation;\n'))),(0,s.yg)("h2",{id:"create-navigation-for-all-screens"},"Create Navigation for all screens"),(0,s.yg)("ul",null,(0,s.yg)("li",{parentName:"ul"},"To create a navigation file for multiple screens that resides at the root of the ",(0,s.yg)("inlineCode",{parentName:"li"},"src/screens/")," folder, you can run this:")),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-sh"},"rnhc create -n <navigation-type>\n")),(0,s.yg)("ul",null,(0,s.yg)("li",{parentName:"ul"},"This will create the navigation file for all existed screens in the ",(0,s.yg)("inlineCode",{parentName:"li"},"src/screens/")," folder.")),(0,s.yg)("p",null,"You can also run this command to create a navigation file for multiple screens that resides in a specific path under the ",(0,s.yg)("inlineCode",{parentName:"p"},"src/screens/")," folder:"),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-sh"},"rnhc create -n <navigation-type> -f <folder-path>\n")),(0,s.yg)("ul",null,(0,s.yg)("li",{parentName:"ul"},(0,s.yg)("p",{parentName:"li"},"This will create the navigation file for all existed screens in the ",(0,s.yg)("inlineCode",{parentName:"p"},"src/screens/<folder-path>/")," folder.")),(0,s.yg)("li",{parentName:"ul"},(0,s.yg)("p",{parentName:"li"},"This also work for the nested navigations.")),(0,s.yg)("li",{parentName:"ul"},(0,s.yg)("p",{parentName:"li"},"All the sub folders should contain the navigation files so it can be added to the navigation file you want to create, for example take this structure:"))),(0,s.yg)(r.A,{groupId:"language",mdxType:"Tabs"},(0,s.yg)(i.A,{value:"js",label:"JavaScript",default:!0,mdxType:"TabItem"},(0,s.yg)(o.A,{mdxType:"CodeBlock"},"src/\n\u2514\u2500\u2500 screens\n    \u251c\u2500\u2500 folder\n    \u2502\xa0\xa0 \u251c\u2500\u2500 screen-one\n    \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 __tests__\n    \u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 index.spec.jsx\n    \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 functions\n    \u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 index.js\n    \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 index.jsx\n    \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 styles.js\n    \u2502\xa0\xa0 \u2514\u2500\u2500 screen-two\n    \u2502\xa0\xa0     \u251c\u2500\u2500 __tests__\n    \u2502\xa0\xa0     \u2502\xa0\xa0 \u2514\u2500\u2500 index.spec.jsx\n    \u2502\xa0\xa0     \u251c\u2500\u2500 functions\n    \u2502\xa0\xa0     \u2502\xa0\xa0 \u2514\u2500\u2500 index.js\n    \u2502\xa0\xa0     \u251c\u2500\u2500 index.jsx\n    \u2502\xa0\xa0     \u2514\u2500\u2500 styles.js\n    \u251c\u2500\u2500 navigation.jsx\n    \u251c\u2500\u2500 screen-four\n    \u2502\xa0\xa0 \u251c\u2500\u2500 __tests__\n    \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 index.spec.jsx\n    \u2502\xa0\xa0 \u251c\u2500\u2500 functions\n    \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 index.js\n    \u2502\xa0\xa0 \u251c\u2500\u2500 index.jsx\n    \u2502\xa0\xa0 \u2514\u2500\u2500 styles.js\n    \u2514\u2500\u2500 screen-three\n        \u251c\u2500\u2500 __tests__\n        \u2502\xa0\xa0 \u2514\u2500\u2500 index.spec.jsx\n        \u251c\u2500\u2500 functions\n        \u2502\xa0\xa0 \u2514\u2500\u2500 index.js\n        \u251c\u2500\u2500 index.jsx\n        \u2514\u2500\u2500 styles.js")),(0,s.yg)(i.A,{value:"ts",label:"TypeScript",mdxType:"TabItem"},(0,s.yg)(o.A,{mdxType:"CodeBlock"},"src/\n\u2514\u2500\u2500 screens\n    \u251c\u2500\u2500 folder\n    \u2502\xa0\xa0 \u251c\u2500\u2500 screen-one\n    \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 __tests__\n    \u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 index.spec.tsx\n    \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 functions\n    \u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 index.ts\n    \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 index.tsx\n    \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 styles.ts\n    \u2502\xa0\xa0 \u2514\u2500\u2500 screen-two\n    \u2502\xa0\xa0     \u251c\u2500\u2500 __tests__\n    \u2502\xa0\xa0     \u2502\xa0\xa0 \u2514\u2500\u2500 index.spec.tsx\n    \u2502\xa0\xa0     \u251c\u2500\u2500 functions\n    \u2502\xa0\xa0     \u2502\xa0\xa0 \u2514\u2500\u2500 index.ts\n    \u2502\xa0\xa0     \u251c\u2500\u2500 index.tsx\n    \u2502\xa0\xa0     \u2514\u2500\u2500 styles.ts\n    \u251c\u2500\u2500 navigation.tsx\n    \u251c\u2500\u2500 screen-four\n    \u2502\xa0\xa0 \u251c\u2500\u2500 __tests__\n    \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 index.spec.tsx\n    \u2502\xa0\xa0 \u251c\u2500\u2500 functions\n    \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 index.ts\n    \u2502\xa0\xa0 \u251c\u2500\u2500 index.tsx\n    \u2502\xa0\xa0 \u2514\u2500\u2500 styles.ts\n    \u2514\u2500\u2500 screen-three\n        \u251c\u2500\u2500 __tests__\n        \u2502\xa0\xa0 \u2514\u2500\u2500 index.spec.tsx\n        \u251c\u2500\u2500 functions\n        \u2502\xa0\xa0 \u2514\u2500\u2500 index.ts\n        \u251c\u2500\u2500 index.tsx\n        \u2514\u2500\u2500 styles.ts"))),(0,s.yg)("p",null,"When you try to create a navigation like this:"),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-sh"},"rnhc create -n stack\n")),(0,s.yg)("p",null,"It will output the following:"),(0,s.yg)(r.A,{groupId:"language",mdxType:"Tabs"},(0,s.yg)(i.A,{value:"js",label:"JavaScript",default:!0,mdxType:"TabItem"},(0,s.yg)(o.A,{language:"jsx",mdxType:"CodeBlock"},"./src/screens/folder/navigation.jsx does not exist\n./src/screens/navigation.jsx created")),(0,s.yg)(i.A,{value:"ts",label:"TypeScript",mdxType:"TabItem"},(0,s.yg)(o.A,{language:"tsx",mdxType:"CodeBlock"},"./src/screens/folder/navigation.tsx does not exist\n./src/screens/navigation.tsx created"))),(0,s.yg)("p",null,"And the ",(0,s.yg)("inlineCode",{parentName:"p"},"./src/screens/navigation.*")," file will only contain ",(0,s.yg)("inlineCode",{parentName:"p"},"screen-three")," and ",(0,s.yg)("inlineCode",{parentName:"p"},"screen-four")," because the ",(0,s.yg)("inlineCode",{parentName:"p"},"src/screens/folder")," does not contain a navigation file."),(0,s.yg)("p",null,"So if you want to create a navigation file for all existed screens in the ",(0,s.yg)("inlineCode",{parentName:"p"},"src/screens/")," folder, you must take in consideration that all subfolders must contain a navigation file first and then you can either update the navigation file or create a new one."),(0,s.yg)("p",null,"By updating it means overwriting in other words, so you can just do this:"),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-sh"},"rnhc create -n stack -o\n")))}x.isMDXComponent=!0}}]);