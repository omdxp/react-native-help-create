"use strict";(self.webpackChunkrnhc_docs=self.webpackChunkrnhc_docs||[]).push([[1312],{5680:(e,t,n)=>{n.d(t,{xA:()=>s,yg:()=>d});var r=n(6540);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},y=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),m=c(n),y=a,d=m["".concat(p,".").concat(y)]||m[y]||u[y]||o;return n?r.createElement(d,i(i({ref:t},s),{},{components:n})):r.createElement(d,i({ref:t},s))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=y;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[m]="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}y.displayName="MDXCreateElement"},4299:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var r=n(8168),a=(n(6540),n(5680));const o={sidebar_position:5},i="Using Templates",l={unversionedId:"create/using-templates",id:"version-2.5.1/create/using-templates",title:"Using Templates",description:"You can create your screens and components with your defined templates by following these steps:",source:"@site/versioned_docs/version-2.5.1/create/using-templates.md",sourceDirName:"create",slug:"/create/using-templates",permalink:"/react-native-help-create/docs/2.5.1/create/using-templates",draft:!1,tags:[],version:"2.5.1",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Create Navigations",permalink:"/react-native-help-create/docs/2.5.1/create/create-navigations"},next:{title:"Create Redux",permalink:"/react-native-help-create/docs/2.5.1/create/create-redux"}},p={},c=[{value:"Example",id:"example",level:3}],s={toc:c};function m(e){let{components:t,...n}=e;return(0,a.yg)("wrapper",(0,r.A)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"using-templates"},"Using Templates"),(0,a.yg)("p",null,"You can create your screens and components with your defined templates by following these steps:"),(0,a.yg)("ol",null,(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("p",{parentName:"li"},"First thing to do is to create a ",(0,a.yg)("inlineCode",{parentName:"p"},".template")," folder at the root of your react project.")),(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("p",{parentName:"li"},"Inside the ",(0,a.yg)("inlineCode",{parentName:"p"},".template")," folder you can add your template, for example ",(0,a.yg)("inlineCode",{parentName:"p"},"componentWithUseEffect.tsx")," (the file extension doesn't matter so it could be ",(0,a.yg)("inlineCode",{parentName:"p"},"*.jsx"),", ",(0,a.yg)("inlineCode",{parentName:"p"},"*.js")," or ",(0,a.yg)("inlineCode",{parentName:"p"},"*.tsx"),"):"))),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-jsx"},'import React, { useEffect } from "react";\nimport { View, Text } from "react-native";\n\nexport default function __COMPONENT__() {\n  useEffect(() => {}, []);\n\n  return (\n    <View>\n      <Text>Hello, World!</Text>\n    </View>\n  );\n}\n')),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},"There is a restriction in naming these templates which is you should not put dots (",(0,a.yg)("inlineCode",{parentName:"p"},"."),") between the name, like this (",(0,a.yg)("inlineCode",{parentName:"p"},"component.WithUseEffect.jsx"),"). It should only contain one dot that makes the extension file like we're doing above.")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},"You should type ",(0,a.yg)("inlineCode",{parentName:"p"},"__COMPONENT__")," in the template file and it will be replaced with the component name you want to create."))),(0,a.yg)("ol",{start:3},(0,a.yg)("li",{parentName:"ol"},"After creating your template you can use them to create components or screens as the following:")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-sh"},"rnhc create -c <component-name> -t <template-name>\n")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-sh"},"rnhc create -s <screen-name> -t <template-name>\n")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"And of course, you can create multiple components or screens with the same template.")),(0,a.yg)("h3",{id:"example"},"Example"),(0,a.yg)("p",null,"As for our example it can be used like this for the above template:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-sh"},"rnhc create -c comp -t componentWithUseEffect\n")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},"This will create ",(0,a.yg)("inlineCode",{parentName:"p"},"comp")," component under ",(0,a.yg)("inlineCode",{parentName:"p"},"src/components/")," folder and the ",(0,a.yg)("inlineCode",{parentName:"p"},"index.jsx")," for this component will contain the same code written in the template.")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},"For the screen case, the ",(0,a.yg)("inlineCode",{parentName:"p"},"index.jsx")," for that screen will contain the code written in the template."))))}m.isMDXComponent=!0}}]);